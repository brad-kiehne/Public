#GitHub URLs
$PowerPlan = "https://raw.githubusercontent.com/brad-kiehne/Public/main/HighPerformance_Power"
$Apps = "https://raw.githubusercontent.com/brad-kiehne/Public/main/Remove_Win10_Apps"
$Unpin = "https://raw.githubusercontent.com/brad-kiehne/Public/main/Unpin_Win10_StartMenu"
$Defaults = "https://raw.githubusercontent.com/brad-kiehne/Public/main/MoeBuilderV8.2BASE"
$Wallpaper = "https://raw.githubusercontent.com/brad-kiehne/Public/main/Wallpaper"
$Win11Defaults = "https://raw.githubusercontent.com/brad-kiehne/Public/main/Win11_Startmenu"
$OEMFix = "https://raw.githubusercontent.com/brad-kiehne/Public/main/Dell_Optimizer_Uninstall"

#Build Folder Structure
$rootpath = "C:\Moetech"
If(!(test-path -PathType container $rootpath))
{
      New-Item -ItemType Directory -Path $rootpath
}

$Logpath = "C:\Moetech\Logs"
If(!(test-path -PathType container $Logpath))
{
      New-Item -ItemType Directory -Path $Logpath
}

$Softwarepath = "C:\Moetech\Software"
If(!(test-path -PathType container $Softwarepath))
{
      New-Item -ItemType Directory -Path $Softwarepath
}

$ODTpath = "C:\Moetech\ODT"
If(!(test-path -PathType container $ODTpath))
{
      New-Item -ItemType Directory -Path $ODTpath
}

$3PPpath = "C:\Moetech\Software\3PP"
If(!(test-path -PathType container $3PPpath))
{
      New-Item -ItemType Directory -Path $3PPpath
}


#Step one - Deploy High Power Plan
$ScriptFromGitHub = Invoke-WebRequest $PowerPlan -UseBasicParsing
Invoke-Expression $($ScriptFromGitHub.Content)

#Step two - Nix Windows 10 Bloatware
$ScriptFromGitHub = Invoke-WebRequest $Apps -UseBasicParsing
Invoke-Expression $($ScriptFromGitHub.Content)

#Step Three - Unpin Windows 10 Menus
$ScriptFromGitHub = Invoke-WebRequest $Unpin -UseBasicParsing
Invoke-Expression $($ScriptFromGitHub.Content)

#Step Four - Nix Windows 11 Bloatware (Includes install for Office365, Chrome, Teams, Adobe, VLC and PMPC)
$ScriptFromGitHub = Invoke-WebRequest $Defaults -UseBasicParsing
Invoke-Expression $($ScriptFromGitHub.Content)

#Step Five - Deploy ADITS External Wallpaper
$ScriptFromGitHub = Invoke-WebRequest $Wallpaper -UseBasicParsing
Invoke-Expression $($ScriptFromGitHub.Content)

#Step Six - Window 11 Specific Defaults
$ScriptFromGitHub = Invoke-WebRequest $Win11Defaults -UseBasicParsing
Invoke-Expression $($ScriptFromGitHub.Content)

#Step Seven - OEM Specific Fix
$ScriptFromGitHub = Invoke-WebRequest $OEMFix -UseBasicParsing
Invoke-Expression $($ScriptFromGitHub.Content)

#Unload - Close Session, handback to CWA
Exit-PSSession
